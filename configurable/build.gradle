plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}



repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.tomcat:tomcat-jdbc:9.0.10'
    implementation 'com.h2database:h2'
    
//    implementation 'org.springframework:spring-tx'
    implementation 'org.springframework:spring-instrument'
//    implementation 'org.springframework:spring-aspects'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

test.doFirst {
    def instrumentLib = instrumentLibPath()
    jvmArgs "-javaagent:${instrumentLib}"
}

bootRun.doFirst {
    def instrumentLib = instrumentLibPath()
    jvmArgs "-javaagent:${instrumentLib}"
}

File instrumentLibPath(){
    return sourceSets.getByName("main").compileClasspath.find {
        cls -> return cls.getName().contains("spring-instrument")
    }
}
